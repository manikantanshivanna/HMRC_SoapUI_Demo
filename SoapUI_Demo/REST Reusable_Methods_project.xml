<?xml version="1.0" encoding="UTF-8"?>
<con:soapui-project id="7808167b-1098-4a3e-a2a4-2bfe31737ba1" activeEnvironment="Default" name="REST Country Services" resourceRoot="" soapui-version="5.4.0" abortOnError="false" runType="SEQUENTIAL" xmlns:con="http://eviware.com/soapui/config"><con:settings/><con:interface xsi:type="con:RestService" id="5946ce6a-331e-4099-a5dd-a4a569e1bcf0" wadlVersion="http://wadl.dev.java.net/2009/02" name="http://services.groupkt.com" type="rest" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache type="TEXT" rootPart=""/><con:endpoints><con:endpoint>http://services.groupkt.com</con:endpoint></con:endpoints><con:resource name="IN" path="/country/get/iso2code/{iso2code}" id="04dfe731-e1ae-4d5f-9934-b4f41b940d23"><con:settings/><con:parameters><con:parameter><con:name>iso2code</con:name><con:style>TEMPLATE</con:style></con:parameter></con:parameters><con:method name="IN 1" id="ce30733a-a687-4fd8-9d91-c9287f869c63" method="GET"><con:settings/><con:parameters/><con:representation type="RESPONSE"><con:mediaType>application/json;charset=UTF-8</con:mediaType><con:status>200</con:status><con:params/><con:element xmlns:in="http://services.groupkt.com/country/get/iso2code/IN">in:Response</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType>text/html;charset=UTF-8</con:mediaType><con:status>200</con:status><con:params/><con:element>html</con:element></con:representation><con:request name="Request 1" id="78671d5b-0928-4c5e-9338-a8f87ee81fde" mediaType="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://services.groupkt.com</con:endpoint><con:request/><con:originalUri>http://services.groupkt.com/country/get/iso2code/IN</con:originalUri><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="iso2code" value="IN, US" xmlns="http://eviware.com/soapui/config"/></con:parameters><con:parameterOrder><con:entry>iso2code</con:entry></con:parameterOrder></con:request></con:method></con:resource></con:interface><con:interface xsi:type="con:RestService" id="71611c50-23f9-4967-ae7f-b2dc7695b8a2" wadlVersion="http://wadl.dev.java.net/2009/02" name="http://services.groupkt.com" type="rest" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache type="TEXT" rootPart=""/><con:endpoints><con:endpoint>http://services.groupkt.com</con:endpoint></con:endpoints><con:resource name="IND" path="/country/get/iso3code/{iso3code}" id="96f8d822-1ca5-414c-a13a-2902797f7f6d"><con:settings/><con:parameters><con:parameter><con:name>iso3code</con:name><con:value/><con:style>TEMPLATE</con:style><con:default/><con:description xsi:nil="true"/></con:parameter></con:parameters><con:method name="IND 1" id="46134d5b-ce79-4516-9075-358e760f3f39" method="GET"><con:settings/><con:parameters/><con:representation type="RESPONSE"><con:mediaType>application/json;charset=UTF-8</con:mediaType><con:status>200</con:status><con:params/><con:element xmlns:ind="http://services.groupkt.com/country/get/iso3code/IND">ind:Response</con:element></con:representation><con:request name="Request 1" id="8c40949a-fb11-4df1-9410-2171f8afc3cd" mediaType="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://services.groupkt.com</con:endpoint><con:request/><con:originalUri>http://services.groupkt.com/country/get/iso3code/IND</con:originalUri><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="iso3code" value="IND" xmlns="http://eviware.com/soapui/config"/></con:parameters><con:parameterOrder><con:entry>iso3code</con:entry></con:parameterOrder></con:request></con:method></con:resource></con:interface><con:interface xsi:type="con:RestService" id="6655ca3e-bd87-4c0f-a8e4-ef983429c98f" wadlVersion="http://wadl.dev.java.net/2009/02" name="Swagger Petstore" type="rest" basePath="/v2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:description>This is a sample server Petstore server.  You can find out more about Swagger at [http://swagger.io](http://swagger.io) or on [irc.freenode.net, #swagger](http://swagger.io/irc/).  For this sample, you can use the api key `special-key` to test the authorization filters.</con:description><con:settings/><con:definitionCache type="TEXT" rootPart=""/><con:endpoints><con:endpoint>http://petstore.swagger.io</con:endpoint></con:endpoints><con:resource name="/pet" path="/pet" id="0f9c13ec-567f-4210-b009-68ac3f1d3306"><con:settings/><con:parameters/><con:method name="addPet" id="31ec4d77-c43d-47bb-acb4-8c62e58eb2a6" method="POST"><con:description>
Add a new pet to the store</con:description><con:settings/><con:parameters/><con:representation type="RESPONSE"><con:mediaType>application/xml</con:mediaType><con:status>405</con:status><con:params/></con:representation><con:representation type="RESPONSE"><con:mediaType>application/json</con:mediaType><con:status>405 200</con:status><con:params/></con:representation><con:representation type="REQUEST"><con:mediaType>application/json</con:mediaType><con:params/></con:representation><con:representation type="REQUEST"><con:mediaType>application/xml</con:mediaType><con:params/></con:representation><con:request name="Request 1" id="8c581f4b-7f3b-4bca-bc68-baadaeba34d6" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@strip-whitespaces">false</con:setting></con:settings><con:endpoint>http://petstore.swagger.io</con:endpoint><con:request>{
  "id": 555,
  "category": {
    "id": 0,
    "name": "dog"
  },
  "name": "adorable doggie",
  "photoUrls": [
    "string"
  ],
  "tags": [
    {
      "id": 0,
      "name": "string"
    }
  ],
  "status": "available"
}</con:request><con:originalUri>http://petstore.swagger.io/v2/pet</con:originalUri><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:request></con:method><con:method name="updatePet" id="0c6dee14-4612-47a0-b557-7c4db65d17b0" method="PUT"><con:description>
Update an existing pet</con:description><con:settings/><con:parameters/><con:representation type="RESPONSE"><con:mediaType>application/xml</con:mediaType><con:status>400</con:status><con:params/></con:representation><con:representation type="RESPONSE"><con:mediaType>application/json</con:mediaType><con:status>400 200</con:status><con:params/></con:representation><con:representation type="RESPONSE"><con:mediaType>application/xml</con:mediaType><con:status>404</con:status><con:params/></con:representation><con:representation type="RESPONSE"><con:mediaType>application/json</con:mediaType><con:status>404</con:status><con:params/></con:representation><con:representation type="RESPONSE"><con:mediaType>application/xml</con:mediaType><con:status>405</con:status><con:params/></con:representation><con:representation type="RESPONSE"><con:mediaType>application/json</con:mediaType><con:status>405</con:status><con:params/></con:representation><con:representation type="REQUEST"><con:mediaType>application/json</con:mediaType><con:params/></con:representation><con:representation type="REQUEST"><con:mediaType>application/xml</con:mediaType><con:params/></con:representation><con:request name="Request 1" id="e01c68f4-93eb-4a1e-901a-66d557384b6e" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://petstore.swagger.io</con:endpoint><con:request>{
  "id": 555,
  "category": {
    "id": 0,
    "name": "cat"
  },
  "name": "adorable cattie",
  "photoUrls": [
    "string"
  ],
  "tags": [
    {
      "id": 0,
      "name": "string"
    }
  ],
  "status": "available"
}</con:request><con:originalUri>http://petstore.swagger.io/v2/pet</con:originalUri><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:request></con:method></con:resource><con:resource name="/pet/findByStatus" path="/pet/findByStatus" id="d1db0120-a6fa-41af-ae2c-b5282e5506c2"><con:settings/><con:parameters/><con:method name="findPetsByStatus" id="0e673849-edcd-40b8-af64-7fe19e886ac1" method="GET"><con:description>Multiple status values can be provided with comma separated strings
Finds Pets by status</con:description><con:settings/><con:parameters><con:parameter required="true"><con:name>status</con:name><con:style>QUERY</con:style><con:description>Status values that need to be considered for filter</con:description></con:parameter></con:parameters><con:representation type="RESPONSE"><con:mediaType>application/xml</con:mediaType><con:status>200</con:status><con:params/></con:representation><con:representation type="RESPONSE"><con:mediaType>application/json</con:mediaType><con:status>200</con:status><con:params/></con:representation><con:representation type="RESPONSE"><con:mediaType>application/xml</con:mediaType><con:status>400</con:status><con:params/></con:representation><con:representation type="RESPONSE"><con:mediaType>application/json</con:mediaType><con:status>400</con:status><con:params/></con:representation><con:request name="Request 1" id="d9e3561f-327a-455a-8584-7e9985d7a01a" mediaType="application/json"><con:settings/><con:endpoint>http://petstore.swagger.io</con:endpoint><con:parameters/></con:request></con:method></con:resource><con:resource name="/pet/findByTags" path="/pet/findByTags" id="bbf81fe4-690a-4d50-a1d1-df48bb002352"><con:settings/><con:parameters/><con:method name="findPetsByTags" id="66dd623e-ee15-48df-9a99-9f7b629d7e4a" method="GET"><con:description>Muliple tags can be provided with comma separated strings. Use tag1, tag2, tag3 for testing.
Finds Pets by tags</con:description><con:settings/><con:parameters><con:parameter required="true"><con:name>tags</con:name><con:style>QUERY</con:style><con:description>Tags to filter by</con:description></con:parameter></con:parameters><con:representation type="RESPONSE"><con:mediaType>application/xml</con:mediaType><con:status>200</con:status><con:params/></con:representation><con:representation type="RESPONSE"><con:mediaType>application/json</con:mediaType><con:status>200</con:status><con:params/></con:representation><con:representation type="RESPONSE"><con:mediaType>application/xml</con:mediaType><con:status>400</con:status><con:params/></con:representation><con:representation type="RESPONSE"><con:mediaType>application/json</con:mediaType><con:status>400</con:status><con:params/></con:representation><con:request name="Request 1" id="b201b166-3c02-4fcc-bccc-8bd1ab10baf2" mediaType="application/json"><con:settings/><con:endpoint>http://petstore.swagger.io</con:endpoint><con:parameters/></con:request></con:method></con:resource><con:resource name="/pet/{petId}" path="/pet/{petId}" id="b24ed24d-2460-41db-be66-3a9ee0d2a21e"><con:settings/><con:parameters/><con:method name="getPetById" id="91d3dc9f-e545-4fc7-ae9d-bd7702141e53" method="GET"><con:description>Returns a single pet
Find pet by ID</con:description><con:settings/><con:parameters><con:parameter required="true"><con:name>petId</con:name><con:style>TEMPLATE</con:style><con:description>ID of pet to return</con:description></con:parameter></con:parameters><con:representation type="RESPONSE"><con:mediaType>application/xml</con:mediaType><con:status>200</con:status><con:params/></con:representation><con:representation type="RESPONSE"><con:mediaType>application/json</con:mediaType><con:status>200</con:status><con:params/></con:representation><con:representation type="RESPONSE"><con:mediaType>application/xml</con:mediaType><con:status>400</con:status><con:params/></con:representation><con:representation type="RESPONSE"><con:mediaType>application/json</con:mediaType><con:status>400</con:status><con:params/></con:representation><con:representation type="RESPONSE"><con:mediaType>application/xml</con:mediaType><con:status>404</con:status><con:params/></con:representation><con:representation type="RESPONSE"><con:mediaType>application/json</con:mediaType><con:status>404</con:status><con:params/></con:representation><con:representation type="FAULT"><con:mediaType>application/json</con:mediaType><con:status>404</con:status><con:params/><con:element xmlns:ns="http://petstore.swagger.io/v2/pet/555">ns:Fault</con:element></con:representation><con:request name="Request 1" id="86c31f81-aea8-454b-94d0-2972a1943f87" mediaType="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://petstore.swagger.io</con:endpoint><con:request/><con:originalUri>http://petstore.swagger.io/v2/pet/555</con:originalUri><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="petId" value="555" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:request></con:method><con:method name="updatePetWithForm" id="ea1b40b6-685f-461a-8680-0c65e8eee479" method="POST"><con:description>
Updates a pet in the store with form data</con:description><con:settings/><con:parameters><con:parameter required="true"><con:name>petId</con:name><con:style>TEMPLATE</con:style><con:description>ID of pet that needs to be updated</con:description></con:parameter><con:parameter><con:name>name</con:name><con:style>QUERY</con:style><con:description>Updated name of the pet</con:description></con:parameter><con:parameter><con:name>status</con:name><con:style>QUERY</con:style><con:description>Updated status of the pet</con:description></con:parameter></con:parameters><con:representation type="RESPONSE"><con:mediaType>application/xml</con:mediaType><con:status>405</con:status><con:params/></con:representation><con:representation type="RESPONSE"><con:mediaType>application/json</con:mediaType><con:status>405</con:status><con:params/></con:representation><con:representation type="REQUEST"><con:mediaType>application/x-www-form-urlencoded</con:mediaType><con:params/></con:representation><con:request name="Request 1" id="bb669fc8-691f-4a4d-8640-a074f36e99c8" mediaType="application/x-www-form-urlencoded"><con:settings/><con:endpoint>http://petstore.swagger.io</con:endpoint><con:parameters/></con:request></con:method><con:method name="deletePet" id="49efab0f-3acb-48d1-94c7-d29eafc9bb75" method="DELETE"><con:description>
Deletes a pet</con:description><con:settings/><con:parameters><con:parameter><con:name>api_key</con:name><con:style>HEADER</con:style><con:description xsi:nil="true"/></con:parameter><con:parameter required="true"><con:name>petId</con:name><con:style>TEMPLATE</con:style><con:description>Pet id to delete</con:description></con:parameter></con:parameters><con:representation type="RESPONSE"><con:mediaType>application/xml</con:mediaType><con:status>400</con:status><con:params/></con:representation><con:representation type="RESPONSE"><con:mediaType>application/json</con:mediaType><con:status>400 200</con:status><con:params/></con:representation><con:representation type="RESPONSE"><con:mediaType>application/xml</con:mediaType><con:status>404</con:status><con:params/></con:representation><con:representation type="RESPONSE"><con:mediaType>application/json</con:mediaType><con:status>404</con:status><con:params/></con:representation><con:representation type="REQUEST"><con:mediaType>application/json</con:mediaType><con:params/></con:representation><con:request name="Request 1" id="4b80d3d3-6bbe-4f52-9460-9e7451a4b3cc" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://petstore.swagger.io</con:endpoint><con:request/><con:originalUri>http://petstore.swagger.io/v2/pet/555</con:originalUri><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="petId" value="555" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:request></con:method></con:resource><con:resource name="/pet/{petId}/uploadImage" path="/pet/{petId}/uploadImage" id="a1e101ca-06b3-4c18-8b1c-a76ac0b12b7a"><con:settings/><con:parameters/><con:method name="uploadFile" id="04282c2b-b672-4e02-9697-cd2e21dfc818" method="POST"><con:description>
uploads an image</con:description><con:settings/><con:parameters><con:parameter required="true"><con:name>petId</con:name><con:style>TEMPLATE</con:style><con:description>ID of pet to update</con:description></con:parameter><con:parameter><con:name>additionalMetadata</con:name><con:style>QUERY</con:style><con:description>Additional data to pass to server</con:description></con:parameter><con:parameter><con:name>file</con:name><con:style>QUERY</con:style><con:description>file to upload</con:description></con:parameter></con:parameters><con:representation type="RESPONSE"><con:mediaType>application/json</con:mediaType><con:status>200</con:status><con:params/></con:representation><con:representation type="REQUEST"><con:mediaType>multipart/form-data</con:mediaType><con:params/></con:representation><con:representation type="FAULT"><con:mediaType>text/html; charset=ISO-8859-1</con:mediaType><con:status>500</con:status><con:params/><con:element>html</con:element></con:representation><con:request name="Request 1" id="1e506f01-3726-4601-bbef-e0ac9a23ec37" mediaType="multipart/form-data" postQueryString="true"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://petstore.swagger.io</con:endpoint><con:request/><con:originalUri>http://petstore.swagger.io/v2/pet/555/uploadImage</con:originalUri><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:attachment><con:name>ConfigureSystem.png</con:name><con:contentType>image/x-png</con:contentType><con:size>100773</con:size><con:contentId>ConfigureSystem.png</con:contentId><con:data></con:data><con:id>8cc6f47e-4298-4df4-8941-77056532c2ad</con:id></con:attachment><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="petId" value="555"/>
  <con:entry key="file" value="ConfigureSystem.png"/>
  <con:entry key="additionalMetadata" value="image/x-png"/>
</con:parameters></con:request></con:method></con:resource><con:resource name="/store/inventory" path="/store/inventory" id="db6ed21c-f724-4378-993b-4628b5af6536"><con:settings/><con:parameters/><con:method name="getInventory" id="8f061d52-ae94-410d-acbb-f63b32e8e271" method="GET"><con:description>Returns a map of status codes to quantities
Returns pet inventories by status</con:description><con:settings/><con:parameters/><con:representation type="RESPONSE"><con:mediaType>application/json</con:mediaType><con:status>200</con:status><con:params/></con:representation><con:request name="Request 1" id="438eb926-58fd-45f0-9274-42fbc80d7798" mediaType="application/json"><con:settings/><con:endpoint>http://petstore.swagger.io</con:endpoint><con:parameters/></con:request></con:method></con:resource><con:resource name="/store/order" path="/store/order" id="8c8c0bcf-77fe-4b0c-8287-6c738544261c"><con:settings/><con:parameters/><con:method name="placeOrder" id="b3a68362-5d79-4e6b-8fa4-5a16af5a6c91" method="POST"><con:description>
Place an order for a pet</con:description><con:settings/><con:parameters/><con:representation type="RESPONSE"><con:mediaType>application/xml</con:mediaType><con:status>200</con:status><con:params/></con:representation><con:representation type="RESPONSE"><con:mediaType>application/json</con:mediaType><con:status>200</con:status><con:params/></con:representation><con:representation type="RESPONSE"><con:mediaType>application/xml</con:mediaType><con:status>400</con:status><con:params/></con:representation><con:representation type="RESPONSE"><con:mediaType>application/json</con:mediaType><con:status>400</con:status><con:params/></con:representation><con:request name="Request 1" id="678cd0ba-c603-4b2c-a09a-ae62e0a258ec" mediaType="application/json"><con:settings/><con:endpoint>http://petstore.swagger.io</con:endpoint><con:parameters/></con:request></con:method></con:resource><con:resource name="/store/order/{orderId}" path="/store/order/{orderId}" id="ac54b538-0c98-4315-b988-f38c0fc71ed4"><con:settings/><con:parameters/><con:method name="getOrderById" id="87356814-4e42-448e-897d-653b65cdaaf3" method="GET"><con:description>For valid response try integer IDs with value >= 1 and &lt;= 10. Other values will generated exceptions
Find purchase order by ID</con:description><con:settings/><con:parameters><con:parameter required="true"><con:name>orderId</con:name><con:style>TEMPLATE</con:style><con:description>ID of pet that needs to be fetched</con:description></con:parameter></con:parameters><con:representation type="RESPONSE"><con:mediaType>application/xml</con:mediaType><con:status>200</con:status><con:params/></con:representation><con:representation type="RESPONSE"><con:mediaType>application/json</con:mediaType><con:status>200</con:status><con:params/></con:representation><con:representation type="RESPONSE"><con:mediaType>application/xml</con:mediaType><con:status>400</con:status><con:params/></con:representation><con:representation type="RESPONSE"><con:mediaType>application/json</con:mediaType><con:status>400</con:status><con:params/></con:representation><con:representation type="RESPONSE"><con:mediaType>application/xml</con:mediaType><con:status>404</con:status><con:params/></con:representation><con:representation type="RESPONSE"><con:mediaType>application/json</con:mediaType><con:status>404</con:status><con:params/></con:representation><con:request name="Request 1" id="623ead06-e3e9-4044-b676-e98f45a83a23" mediaType="application/json"><con:settings/><con:endpoint>http://petstore.swagger.io</con:endpoint><con:parameters/></con:request></con:method><con:method name="deleteOrder" id="b97f4b42-8750-4a98-9291-7ac80e541d0e" method="DELETE"><con:description>For valid response try integer IDs with positive integer value. Negative or non-integer values will generate API errors
Delete purchase order by ID</con:description><con:settings/><con:parameters><con:parameter required="true"><con:name>orderId</con:name><con:style>TEMPLATE</con:style><con:description>ID of the order that needs to be deleted</con:description></con:parameter></con:parameters><con:representation type="RESPONSE"><con:mediaType>application/xml</con:mediaType><con:status>400</con:status><con:params/></con:representation><con:representation type="RESPONSE"><con:mediaType>application/json</con:mediaType><con:status>400</con:status><con:params/></con:representation><con:representation type="RESPONSE"><con:mediaType>application/xml</con:mediaType><con:status>404</con:status><con:params/></con:representation><con:representation type="RESPONSE"><con:mediaType>application/json</con:mediaType><con:status>404</con:status><con:params/></con:representation><con:request name="Request 1" id="2b979f50-c841-43d2-872f-506c20b26718" mediaType="application/json"><con:settings/><con:endpoint>http://petstore.swagger.io</con:endpoint><con:parameters/></con:request></con:method></con:resource><con:resource name="/user" path="/user" id="055bea0c-cd27-4327-a41e-87ef6f7e1f76"><con:settings/><con:parameters/><con:method name="createUser" id="bad87772-3fd2-4e9e-973e-b792e8a3b56e" method="POST"><con:description>This can only be done by the logged in user.
Create user</con:description><con:settings/><con:parameters/><con:representation type="RESPONSE"><con:mediaType>application/xml</con:mediaType><con:status/><con:params/></con:representation><con:representation type="RESPONSE"><con:mediaType>application/json</con:mediaType><con:status/><con:params/></con:representation><con:request name="Request 1" id="5cf5ab93-f722-4485-b411-da6f5a5abb49" mediaType="application/json"><con:settings/><con:endpoint>http://petstore.swagger.io</con:endpoint><con:parameters/></con:request></con:method></con:resource><con:resource name="/user/createWithArray" path="/user/createWithArray" id="65afaaf4-e4f0-436d-8e42-5010bd4e33b7"><con:settings/><con:parameters/><con:method name="createUsersWithArrayInput" id="5efd9aed-bd04-4393-8cf4-af245d290517" method="POST"><con:description>
Creates list of users with given input array</con:description><con:settings/><con:parameters/><con:representation type="RESPONSE"><con:mediaType>application/xml</con:mediaType><con:status/><con:params/></con:representation><con:representation type="RESPONSE"><con:mediaType>application/json</con:mediaType><con:status/><con:params/></con:representation><con:request name="Request 1" id="acdadcba-e3fa-4b6f-bb1d-13072aba726b" mediaType="application/json"><con:settings/><con:endpoint>http://petstore.swagger.io</con:endpoint><con:parameters/></con:request></con:method></con:resource><con:resource name="/user/createWithList" path="/user/createWithList" id="927c3519-ded1-480e-80fa-bcf7669c1097"><con:settings/><con:parameters/><con:method name="createUsersWithListInput" id="6782a8e9-28e7-4301-b9b3-d6b6db9bf9ff" method="POST"><con:description>
Creates list of users with given input array</con:description><con:settings/><con:parameters/><con:representation type="RESPONSE"><con:mediaType>application/xml</con:mediaType><con:status/><con:params/></con:representation><con:representation type="RESPONSE"><con:mediaType>application/json</con:mediaType><con:status/><con:params/></con:representation><con:request name="Request 1" id="17d4babc-dbb4-4fb4-89a9-395224c352b7" mediaType="application/json"><con:settings/><con:endpoint>http://petstore.swagger.io</con:endpoint><con:parameters/></con:request></con:method></con:resource><con:resource name="/user/login" path="/user/login" id="3c9b3393-7b73-4086-b1af-bab03183c816"><con:settings/><con:parameters/><con:method name="loginUser" id="ec121da4-a7e9-4271-a66a-9551cb1cf7a8" method="GET"><con:description>
Logs user into the system</con:description><con:settings/><con:parameters><con:parameter required="true"><con:name>username</con:name><con:style>QUERY</con:style><con:description>The user name for login</con:description></con:parameter><con:parameter required="true"><con:name>password</con:name><con:style>QUERY</con:style><con:description>The password for login in clear text</con:description></con:parameter></con:parameters><con:representation type="RESPONSE"><con:mediaType>application/xml</con:mediaType><con:status>200</con:status><con:params/></con:representation><con:representation type="RESPONSE"><con:mediaType>application/json</con:mediaType><con:status>200</con:status><con:params/></con:representation><con:representation type="RESPONSE"><con:mediaType>application/xml</con:mediaType><con:status>400</con:status><con:params/></con:representation><con:representation type="RESPONSE"><con:mediaType>application/json</con:mediaType><con:status>400</con:status><con:params/></con:representation><con:request name="Request 1" id="7d1253c1-a8fd-4a36-a1d6-64fe08aa2b78" mediaType="application/json"><con:settings/><con:endpoint>http://petstore.swagger.io</con:endpoint><con:parameters/></con:request></con:method></con:resource><con:resource name="/user/logout" path="/user/logout" id="7ef0b178-1a83-46e1-ae2d-45e38edf52ca"><con:settings/><con:parameters/><con:method name="logoutUser" id="450ea566-5513-4c03-9cf9-357887578fc5" method="GET"><con:description>
Logs out current logged in user session</con:description><con:settings/><con:parameters/><con:representation type="RESPONSE"><con:mediaType>application/xml</con:mediaType><con:status/><con:params/></con:representation><con:representation type="RESPONSE"><con:mediaType>application/json</con:mediaType><con:status/><con:params/></con:representation><con:request name="Request 1" id="3a4d6b49-3b35-4595-b58b-1c144626fe3e" mediaType="application/json"><con:settings/><con:endpoint>http://petstore.swagger.io</con:endpoint><con:parameters/></con:request></con:method></con:resource><con:resource name="/user/{username}" path="/user/{username}" id="e5ffbf49-c886-472e-8a04-a317ea0fd0e3"><con:settings/><con:parameters/><con:method name="getUserByName" id="be110a2d-fb15-4feb-8f00-c66d8a94b896" method="GET"><con:description>
Get user by user name</con:description><con:settings/><con:parameters><con:parameter required="true"><con:name>username</con:name><con:style>TEMPLATE</con:style><con:description>The name that needs to be fetched. Use user1 for testing. </con:description></con:parameter></con:parameters><con:representation type="RESPONSE"><con:mediaType>application/xml</con:mediaType><con:status>200</con:status><con:params/></con:representation><con:representation type="RESPONSE"><con:mediaType>application/json</con:mediaType><con:status>200</con:status><con:params/></con:representation><con:representation type="RESPONSE"><con:mediaType>application/xml</con:mediaType><con:status>400</con:status><con:params/></con:representation><con:representation type="RESPONSE"><con:mediaType>application/json</con:mediaType><con:status>400</con:status><con:params/></con:representation><con:representation type="RESPONSE"><con:mediaType>application/xml</con:mediaType><con:status>404</con:status><con:params/></con:representation><con:representation type="RESPONSE"><con:mediaType>application/json</con:mediaType><con:status>404</con:status><con:params/></con:representation><con:request name="Request 1" id="b042f788-0b00-4713-84c2-7e55d28aa98f" mediaType="application/json"><con:settings/><con:endpoint>http://petstore.swagger.io</con:endpoint><con:parameters/></con:request></con:method><con:method name="updateUser" id="96ad9d41-f376-46c5-a183-e1da0af4c22b" method="PUT"><con:description>This can only be done by the logged in user.
Updated user</con:description><con:settings/><con:parameters><con:parameter required="true"><con:name>username</con:name><con:style>TEMPLATE</con:style><con:description>name that need to be updated</con:description></con:parameter></con:parameters><con:representation type="RESPONSE"><con:mediaType>application/xml</con:mediaType><con:status>400</con:status><con:params/></con:representation><con:representation type="RESPONSE"><con:mediaType>application/json</con:mediaType><con:status>400</con:status><con:params/></con:representation><con:representation type="RESPONSE"><con:mediaType>application/xml</con:mediaType><con:status>404</con:status><con:params/></con:representation><con:representation type="RESPONSE"><con:mediaType>application/json</con:mediaType><con:status>404</con:status><con:params/></con:representation><con:request name="Request 1" id="c8cf0c6a-326c-43b3-b6d8-06cb7028d419" mediaType="application/json"><con:settings/><con:endpoint>http://petstore.swagger.io</con:endpoint><con:parameters/></con:request></con:method><con:method name="deleteUser" id="6b166a02-1f0b-4261-b58f-eb0ec0c4780e" method="DELETE"><con:description>This can only be done by the logged in user.
Delete user</con:description><con:settings/><con:parameters><con:parameter required="true"><con:name>username</con:name><con:style>TEMPLATE</con:style><con:description>The name that needs to be deleted</con:description></con:parameter></con:parameters><con:representation type="RESPONSE"><con:mediaType>application/xml</con:mediaType><con:status>400</con:status><con:params/></con:representation><con:representation type="RESPONSE"><con:mediaType>application/json</con:mediaType><con:status>400</con:status><con:params/></con:representation><con:representation type="RESPONSE"><con:mediaType>application/xml</con:mediaType><con:status>404</con:status><con:params/></con:representation><con:representation type="RESPONSE"><con:mediaType>application/json</con:mediaType><con:status>404</con:status><con:params/></con:representation><con:request name="Request 1" id="e01acc1e-57fb-4fb0-9c38-9ad8af6d1092" mediaType="application/json"><con:settings/><con:endpoint>http://petstore.swagger.io</con:endpoint><con:parameters/></con:request></con:method></con:resource></con:interface><con:testSuite id="6310a43c-d614-42bf-add7-d73a29d9985e" name="TS PetStore" disabled="true"><con:settings/><con:runType>SEQUENTIAL</con:runType><con:testCase id="63fe767b-a17e-4302-a5d6-b5caf710ed82" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="EndToEndTC" searchProperties="true"><con:settings/><con:testStep type="restrequest" name="AddPet" id="5c8102ff-d0c6-44b4-b936-8c21a8b2ed1b"><con:settings/><con:config service="Swagger Petstore" resourcePath="/v2/pet" methodName="addPet" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="AddPet" id="8c581f4b-7f3b-4bca-bc68-baadaeba34d6" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@strip-whitespaces">false</con:setting></con:settings><con:endpoint>http://petstore.swagger.io</con:endpoint><con:request>{
  "id": 555,
  "category": {
    "id": 0,
    "name": "dog"
  },
  "name": "adorable doggie",
  "photoUrls": [
    "string"
  ],
  "tags": [
    {
      "id": 0,
      "name": "string"
    }
  ],
  "status": "available"
}</con:request><con:originalUri>http://petstore.swagger.io/v2/pet</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="a1c6ac0a-de0b-4b35-aee1-c34f69c32228" name="Valid HTTP Status Codes"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GetPetAfterCreation" id="f4ce88a2-cfb1-4d07-bb9c-03177fefeb23"><con:settings/><con:config service="Swagger Petstore" resourcePath="/v2/pet/{petId}" methodName="getPetById" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GetPetAfterCreation" id="86c31f81-aea8-454b-94d0-2972a1943f87" mediaType="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://petstore.swagger.io</con:endpoint><con:request/><con:originalUri>http://petstore.swagger.io/v2/pet/555</con:originalUri><con:assertion type="JsonPath Match" id="52c1787f-1b8f-4ae3-928d-9835c139c2b5" name="JsonPath Match"><con:configuration><path>$.</path><content>${AddPet#Response#$.}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="petId" value="555" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="UpdatePet" id="9be4073b-4b71-4a9b-a044-59789e30e250"><con:settings/><con:config service="Swagger Petstore" resourcePath="/v2/pet" methodName="updatePet" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="UpdatePet" id="e01c68f4-93eb-4a1e-901a-66d557384b6e" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://petstore.swagger.io</con:endpoint><con:request>{
  "id": 555,
  "category": {
    "id": 0,
    "name": "cat"
  },
  "name": "adorable cattie",
  "photoUrls": [
    "string"
  ],
  "tags": [
    {
      "id": 0,
      "name": "string"
    }
  ],
  "status": "available"
}</con:request><con:originalUri>http://petstore.swagger.io/v2/pet</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="2cf1ca35-c4fc-4c0c-9f72-37e6e87b8006" name="Valid HTTP Status Codes"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GetPetAfterUpdate" id="5c3bf4bc-d09f-48ff-9acd-8719407db020"><con:settings/><con:config service="Swagger Petstore" resourcePath="/v2/pet/{petId}" methodName="getPetById" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GetPetAfterUpdate" id="86c31f81-aea8-454b-94d0-2972a1943f87" mediaType="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://petstore.swagger.io</con:endpoint><con:request/><con:originalUri>http://petstore.swagger.io/v2/pet/555</con:originalUri><con:assertion type="JsonPath Match" id="0731ce1d-9f3f-4685-9cc0-7c269459f2ed" name="JsonPath Match"><con:configuration><path>$.</path><content>${UpdatePet#Response#$.}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="petId" value="555" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="DeletePet" id="880243f3-3be1-425f-80d5-97732f886ecd"><con:settings/><con:config service="Swagger Petstore" resourcePath="/v2/pet/{petId}" methodName="deletePet" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="DeletePet" id="4b80d3d3-6bbe-4f52-9460-9e7451a4b3cc" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://petstore.swagger.io</con:endpoint><con:request/><con:originalUri>http://petstore.swagger.io/v2/pet/555</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="608a009a-5add-490e-a8a3-9c9de52b79af" name="Valid HTTP Status Codes"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="petId" value="555" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GetPetAfterDeletion" id="463ad971-4edd-4fdb-8b12-fc946588b89e"><con:settings/><con:config service="Swagger Petstore" resourcePath="/v2/pet/{petId}" methodName="getPetById" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GetPetAfterDeletion" id="86c31f81-aea8-454b-94d0-2972a1943f87" mediaType="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://petstore.swagger.io</con:endpoint><con:request/><con:originalUri>http://petstore.swagger.io/v2/pet/555</con:originalUri><con:assertion type="JsonPath Match" id="dcb474b5-e437-4f66-a36c-161a7b3c81ae" name="JsonPath Match"><con:configuration><path>$.message</path><content>Pet not found</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="petId" value="555" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:properties/></con:testCase><con:properties/></con:testSuite><con:testSuite id="1f4ea855-26d7-4dbb-b257-50add5d60fed" name="TS_ScriptLibrary"><con:settings/><con:runType>SEQUENTIAL</con:runType><con:testCase id="8c470d87-afc8-4871-ab1e-a0cf2bc9c9e5" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="ReusableLib" searchProperties="true"><con:settings/><con:testStep type="groovy" name="ReturnJSON" id="074c86a3-c1be-4e5a-b27a-9976becdebcc"><con:settings/><con:config><script>import groovy.json.JsonSlurper

context.setProperty("responseValue", new ReturnJSON());

class ReturnJSON{
 
  def responseValue(def response){
  	def jsonSlurper = new JsonSlurper()
    	  	return (jsonSlurper.parseText(response))
    }

}</script></con:config></con:testStep><con:testStep type="groovy" name="AssertJSONValue" id="d85c3970-3f5b-41a5-a32b-8cb361f41963"><con:settings/><con:config><script>context.setProperty("assertjsonvalue", new assertJSONValue())

class assertJSONValue{
 
  String assertValue(String actualVal, String expectedVal){
  	if(actualVal==expectedVal){
  		return "PASSED: this value is as expected $actualVal $expectedVal"
  	}else {
  		return "FAILED: this value does not match expected value $actualVal $expectedVal"
  	}
    }

}</script></con:config></con:testStep><con:properties/></con:testCase><con:properties/></con:testSuite><con:testSuite id="0690a77d-0406-419f-8155-07880a583ea8" name="TS_ISOCode"><con:settings/><con:runType>SEQUENTIAL</con:runType><con:testCase id="f392af6f-b6a5-435e-80c5-44a4d01e4163" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_ISO2Code" searchProperties="true"><con:settings/><con:testStep type="restrequest" name="ISO2Code-Request" id="e7ca7785-f79a-4496-a53a-a96fac9176c7"><con:settings/><con:config service="http://services.groupkt.com" resourcePath="/country/get/iso2code/{iso2code}" methodName="IN 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="ISO2Code-Request" id="78671d5b-0928-4c5e-9338-a8f87ee81fde" mediaType="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://services.groupkt.com</con:endpoint><con:request/><con:originalUri>http://services.groupkt.com/country/get/iso2code/IN</con:originalUri><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="iso2code" value="${#TestSuite#iso2code}" xmlns="http://eviware.com/soapui/config"/></con:parameters><con:parameterOrder><con:entry>iso2code</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="ValidateJSONvalue" id="b98106d0-0db3-497f-ae59-3fb7bebe20e6"><con:settings/><con:config><script>//calling the method responseValue defined in the library
scripts = testRunner.testCase.testSuite.project.testSuites["TS_ScriptLibrary"]
scripts.testCases["ReusableLib"].testSteps["ReturnJSON"].run(testRunner, context)
//passing the WebService response to method  responseValue
def response = context.expand('${ISO2Code-Request#Response}')
//responseValue returns parsed JSON response
def responseValue= context.responseValue.responseValue(response)
// need to call method assertJSON value
scripts.testCases["ReusableLib"].testSteps["AssertJSONValue"].run(testRunner, context)
//validate all values of the response
def name = context.assertjsonvalue.assertValue(responseValue.RestResponse.result.name, 'United States of America')
def codeone = context.assertjsonvalue.assertValue(responseValue.RestResponse.result.alpha2_code, 'US')
def codetwo = context.assertjsonvalue.assertValue(responseValue.RestResponse.result.alpha3_code, 'USA')
log.info "results of validating all values $name, $codeone, $codetwo"</script></con:config></con:testStep><con:properties/></con:testCase><con:properties><con:property><con:name>iso2code</con:name><con:value>US</con:value></con:property></con:properties></con:testSuite><con:properties/><con:wssContainer/><con:oAuth2ProfileContainer/><con:oAuth1ProfileContainer/><con:sensitiveInformation/></con:soapui-project>